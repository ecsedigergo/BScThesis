grammar hu.bme.mit.ComponentModel with org.eclipse.xtext.common.Terminals

import "http://www.bme.hu/mit/ErrorModel" as emod
//import "platform:/resource/org.example/src/example.ecore"
generate componentModel "http://www.bme.hu/mit/ComponentModel"

ComponentModel:
	(elements+=AbstractElement)*;

AbstractElement:
	SystemDec | SystemConnDec; //ImportE | 

//ImportE:
//	'import emodel' includedEModel=[emod::ErrorModel];
SystemConnDec:
	'system connection' name=QualifiedName 'from' sourceSystem=[SystemDec] '.' sourcePort=[SystemPortDec]
	'to' targetSystem=[SystemDec] '.' targetPort=[SystemPortDec];

QualifiedName:
	ID ('.' ID)*;

SystemDec:
	'system declaration' name=QualifiedName '{'
	(sysFeatures+=AbstractFeatures)*
	'}';

AbstractFeatures:
	ComponentType | ComponentImpl | CompConnDec | PortType | SystemPortDec;

SystemPortDec:
	SystemPortIn | SystemPortOut;

SystemPortIn:
	'system port in' name=QualifiedName 'to' inComp=[ComponentImpl] '.' inPort=[InPort];

SystemPortOut:
	'system port out' name=QualifiedName 'from' outComp=[ComponentImpl] '.' outPort=[OutPort];

CompConnDec:
	'connection' name=ID 'from' sourceComp=[ComponentImpl] '.' sourcePort=[OutPort]
	'to' targetComp=[ComponentImpl] '.' targetPort=[InPort];

ComponentImpl:
	'component implementation' name=QualifiedName ':' superType=[ComponentType];

ComponentType:
	'component type' name=QualifiedName '{'
	(compFeatures+=ComponentFeature)*
	'}';

ComponentFeature:
	(ports+=Port);

Port:
	InPort | OutPort;

InPort:
	'port instance in' name=QualifiedName ':' superType=[PortType];

OutPort:
	'port instance out' name=QualifiedName ':' superType=[PortType];

PortType:
	'port type' name=QualifiedName '{'
	(eModes=errorModes)
	'}';

errorModes:
	'error mode' name=QualifiedName;



	

