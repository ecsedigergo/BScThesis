/*
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.scoping

import hu.bme.mit.componentModel.CompConnDec
import hu.bme.mit.componentModel.ComponentImpl
import hu.bme.mit.componentModel.ComponentModelPackage
import hu.bme.mit.componentModel.InPort
import hu.bme.mit.componentModel.OutPort
import hu.bme.mit.componentModel.SystemConnDec
import hu.bme.mit.componentModel.SystemDec
import hu.bme.mit.componentModel.SystemPortDec
import hu.bme.mit.componentModel.SystemPortIn
import hu.bme.mit.componentModel.SystemPortOut
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.Scopes

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class ComponentModelScopeProvider extends AbstractComponentModelScopeProvider {
	override getScope(EObject context, EReference reference) {
//		if (context instanceof CompConnDec) {
//			val conn = context as CompConnDec
//			if (reference == ComponentModelPackage.Literals.COMP_CONN_DEC__SOURCE_PORT) {
//				
//			}
//		}
		super.getScope(context, reference)

	}
	
}
