/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.depModel.impl;

import hu.bme.mit.depModel.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DepModelFactoryImpl extends EFactoryImpl implements DepModelFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DepModelFactory init()
  {
    try
    {
      DepModelFactory theDepModelFactory = (DepModelFactory)EPackage.Registry.INSTANCE.getEFactory(DepModelPackage.eNS_URI);
      if (theDepModelFactory != null)
      {
        return theDepModelFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DepModelFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DepModelFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DepModelPackage.DEP_MODEL: return createDepModel();
      case DepModelPackage.ABSTRACT_MODEL_DEC: return createabstractModelDec();
      case DepModelPackage.PORT_TYPE: return createPortType();
      case DepModelPackage.ERROR_MODES: return createerrorModes();
      case DepModelPackage.ERROR_MODEL: return createErrorModel();
      case DepModelPackage.EMODEL_ELEMENT: return createEModelElement();
      case DepModelPackage.STATE_DEC: return createStateDec();
      case DepModelPackage.EVENT_DEC: return createEventDec();
      case DepModelPackage.TRANSITION_FEATURE_DEC: return createTransitionFeatureDec();
      case DepModelPackage.TRANSITION_STATE: return createTransitionState();
      case DepModelPackage.TRIGGER_DEC: return createTriggerDec();
      case DepModelPackage.ACTION_DEC: return createActionDec();
      case DepModelPackage.COMPONENT_MODEL: return createComponentModel();
      case DepModelPackage.COMPONENT_MODEL_DEC: return createComponentModelDec();
      case DepModelPackage.SYSTEM_CONN_DEC: return createSystemConnDec();
      case DepModelPackage.SYSTEM_DEC: return createSystemDec();
      case DepModelPackage.ABSTRACT_FEATURES: return createAbstractFeatures();
      case DepModelPackage.SYSTEM_PORT_DEC: return createSystemPortDec();
      case DepModelPackage.SYSTEM_PORT_IN: return createSystemPortIn();
      case DepModelPackage.SYSTEM_PORT_OUT: return createSystemPortOut();
      case DepModelPackage.COMP_CONN_DEC: return createCompConnDec();
      case DepModelPackage.COMPONENT_IMPL: return createComponentImpl();
      case DepModelPackage.COMPONENT_TYPE: return createComponentType();
      case DepModelPackage.PORT: return createPort();
      case DepModelPackage.IN_PORT: return createInPort();
      case DepModelPackage.OUT_PORT: return createOutPort();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DepModel createDepModel()
  {
    DepModelImpl depModel = new DepModelImpl();
    return depModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public abstractModelDec createabstractModelDec()
  {
    abstractModelDecImpl abstractModelDec = new abstractModelDecImpl();
    return abstractModelDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PortType createPortType()
  {
    PortTypeImpl portType = new PortTypeImpl();
    return portType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public errorModes createerrorModes()
  {
    errorModesImpl errorModes = new errorModesImpl();
    return errorModes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ErrorModel createErrorModel()
  {
    ErrorModelImpl errorModel = new ErrorModelImpl();
    return errorModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EModelElement createEModelElement()
  {
    EModelElementImpl eModelElement = new EModelElementImpl();
    return eModelElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDec createStateDec()
  {
    StateDecImpl stateDec = new StateDecImpl();
    return stateDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EventDec createEventDec()
  {
    EventDecImpl eventDec = new EventDecImpl();
    return eventDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TransitionFeatureDec createTransitionFeatureDec()
  {
    TransitionFeatureDecImpl transitionFeatureDec = new TransitionFeatureDecImpl();
    return transitionFeatureDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TransitionState createTransitionState()
  {
    TransitionStateImpl transitionState = new TransitionStateImpl();
    return transitionState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TriggerDec createTriggerDec()
  {
    TriggerDecImpl triggerDec = new TriggerDecImpl();
    return triggerDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ActionDec createActionDec()
  {
    ActionDecImpl actionDec = new ActionDecImpl();
    return actionDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentModel createComponentModel()
  {
    ComponentModelImpl componentModel = new ComponentModelImpl();
    return componentModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentModelDec createComponentModelDec()
  {
    ComponentModelDecImpl componentModelDec = new ComponentModelDecImpl();
    return componentModelDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemConnDec createSystemConnDec()
  {
    SystemConnDecImpl systemConnDec = new SystemConnDecImpl();
    return systemConnDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemDec createSystemDec()
  {
    SystemDecImpl systemDec = new SystemDecImpl();
    return systemDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbstractFeatures createAbstractFeatures()
  {
    AbstractFeaturesImpl abstractFeatures = new AbstractFeaturesImpl();
    return abstractFeatures;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemPortDec createSystemPortDec()
  {
    SystemPortDecImpl systemPortDec = new SystemPortDecImpl();
    return systemPortDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemPortIn createSystemPortIn()
  {
    SystemPortInImpl systemPortIn = new SystemPortInImpl();
    return systemPortIn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemPortOut createSystemPortOut()
  {
    SystemPortOutImpl systemPortOut = new SystemPortOutImpl();
    return systemPortOut;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CompConnDec createCompConnDec()
  {
    CompConnDecImpl compConnDec = new CompConnDecImpl();
    return compConnDec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl createComponentImpl()
  {
    ComponentImplImpl componentImpl = new ComponentImplImpl();
    return componentImpl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentType createComponentType()
  {
    ComponentTypeImpl componentType = new ComponentTypeImpl();
    return componentType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Port createPort()
  {
    PortImpl port = new PortImpl();
    return port;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InPort createInPort()
  {
    InPortImpl inPort = new InPortImpl();
    return inPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutPort createOutPort()
  {
    OutPortImpl outPort = new OutPortImpl();
    return outPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DepModelPackage getDepModelPackage()
  {
    return (DepModelPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DepModelPackage getPackage()
  {
    return DepModelPackage.eINSTANCE;
  }

} //DepModelFactoryImpl
