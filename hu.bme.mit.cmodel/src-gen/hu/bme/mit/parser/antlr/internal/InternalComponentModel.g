/*
 * generated by Xtext 2.9.2
 */
grammar InternalComponentModel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package hu.bme.mit.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.services.ComponentModelGrammarAccess;

}

@parser::members {

 	private ComponentModelGrammarAccess grammarAccess;

    public InternalComponentModelParser(TokenStream input, ComponentModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ComponentModel";
   	}

   	@Override
   	protected ComponentModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleComponentModel
entryRuleComponentModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentModelRule()); }
	iv_ruleComponentModel=ruleComponentModel
	{ $current=$iv_ruleComponentModel.current; }
	EOF;

// Rule ComponentModel
ruleComponentModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getComponentModelAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getComponentModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"hu.bme.mit.ComponentModel.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getSystemDecParserRuleCall_0());
		}
		this_SystemDec_0=ruleSystemDec
		{
			$current = $this_SystemDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getSystemConnDecParserRuleCall_1());
		}
		this_SystemConnDec_1=ruleSystemConnDec
		{
			$current = $this_SystemConnDec_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getPortTypeParserRuleCall_2());
		}
		this_PortType_2=rulePortType
		{
			$current = $this_PortType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSystemConnDec
entryRuleSystemConnDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemConnDecRule()); }
	iv_ruleSystemConnDec=ruleSystemConnDec
	{ $current=$iv_ruleSystemConnDec.current; }
	EOF;

// Rule SystemConnDec
ruleSystemConnDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system connection'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemConnDecAccess().getSystemConnectionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemConnDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemConnDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemConnDecAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSystemConnDecAccess().getSourceSystemSystemDecCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemConnDecAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getSystemConnDecAccess().getSourcePortSystemPortDecCrossReference_5_0());
				}
			)
		)
		otherlv_6='to'
		{
			newLeafNode(otherlv_6, grammarAccess.getSystemConnDecAccess().getToKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getSystemConnDecAccess().getTargetSystemSystemDecCrossReference_7_0());
				}
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getSystemConnDecAccess().getFullStopKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemConnDecRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getSystemConnDecAccess().getTargetPortSystemPortDecCrossReference_9_0());
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleSystemDec
entryRuleSystemDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemDecRule()); }
	iv_ruleSystemDec=ruleSystemDec
	{ $current=$iv_ruleSystemDec.current; }
	EOF;

// Rule SystemDec
ruleSystemDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system declaration'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemDecAccess().getSystemDeclarationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemDecAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDecAccess().getSysFeaturesAbstractFeaturesParserRuleCall_3_0());
				}
				lv_sysFeatures_3_0=ruleAbstractFeatures
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDecRule());
					}
					add(
						$current,
						"sysFeatures",
						lv_sysFeatures_3_0,
						"hu.bme.mit.ComponentModel.AbstractFeatures");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemDecAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAbstractFeatures
entryRuleAbstractFeatures returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractFeaturesRule()); }
	iv_ruleAbstractFeatures=ruleAbstractFeatures
	{ $current=$iv_ruleAbstractFeatures.current; }
	EOF;

// Rule AbstractFeatures
ruleAbstractFeatures returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractFeaturesAccess().getComponentTypeParserRuleCall_0());
		}
		this_ComponentType_0=ruleComponentType
		{
			$current = $this_ComponentType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractFeaturesAccess().getComponentImplParserRuleCall_1());
		}
		this_ComponentImpl_1=ruleComponentImpl
		{
			$current = $this_ComponentImpl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractFeaturesAccess().getCompConnDecParserRuleCall_2());
		}
		this_CompConnDec_2=ruleCompConnDec
		{
			$current = $this_CompConnDec_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractFeaturesAccess().getSystemPortDecParserRuleCall_3());
		}
		this_SystemPortDec_3=ruleSystemPortDec
		{
			$current = $this_SystemPortDec_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSystemPortDec
entryRuleSystemPortDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemPortDecRule()); }
	iv_ruleSystemPortDec=ruleSystemPortDec
	{ $current=$iv_ruleSystemPortDec.current; }
	EOF;

// Rule SystemPortDec
ruleSystemPortDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSystemPortDecAccess().getSystemPortInParserRuleCall_0());
		}
		this_SystemPortIn_0=ruleSystemPortIn
		{
			$current = $this_SystemPortIn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSystemPortDecAccess().getSystemPortOutParserRuleCall_1());
		}
		this_SystemPortOut_1=ruleSystemPortOut
		{
			$current = $this_SystemPortOut_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSystemPortIn
entryRuleSystemPortIn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemPortInRule()); }
	iv_ruleSystemPortIn=ruleSystemPortIn
	{ $current=$iv_ruleSystemPortIn.current; }
	EOF;

// Rule SystemPortIn
ruleSystemPortIn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system port in'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemPortInAccess().getSystemPortInKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemPortInAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemPortInRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemPortInAccess().getToKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortInRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSystemPortInAccess().getInCompComponentImplCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemPortInAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortInRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getSystemPortInAccess().getInPortInPortCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSystemPortOut
entryRuleSystemPortOut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemPortOutRule()); }
	iv_ruleSystemPortOut=ruleSystemPortOut
	{ $current=$iv_ruleSystemPortOut.current; }
	EOF;

// Rule SystemPortOut
ruleSystemPortOut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system port out'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemPortOutAccess().getSystemPortOutKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemPortOutAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemPortOutRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemPortOutAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortOutRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSystemPortOutAccess().getOutCompComponentImplCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemPortOutAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemPortOutRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getSystemPortOutAccess().getOutPortOutPortCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleCompConnDec
entryRuleCompConnDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompConnDecRule()); }
	iv_ruleCompConnDec=ruleCompConnDec
	{ $current=$iv_ruleCompConnDec.current; }
	EOF;

// Rule CompConnDec
ruleCompConnDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='connection'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompConnDecAccess().getConnectionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompConnDecAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompConnDecRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompConnDecAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompConnDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getCompConnDecAccess().getSourceCompComponentImplCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompConnDecAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompConnDecRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getCompConnDecAccess().getSourcePortOutPortCrossReference_5_0());
				}
			)
		)
		otherlv_6='to'
		{
			newLeafNode(otherlv_6, grammarAccess.getCompConnDecAccess().getToKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompConnDecRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getCompConnDecAccess().getTargetCompComponentImplCrossReference_7_0());
				}
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getCompConnDecAccess().getFullStopKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompConnDecRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getCompConnDecAccess().getTargetPortInPortCrossReference_9_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComponentImpl
entryRuleComponentImpl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentImplRule()); }
	iv_ruleComponentImpl=ruleComponentImpl
	{ $current=$iv_ruleComponentImpl.current; }
	EOF;

// Rule ComponentImpl
ruleComponentImpl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component implementation'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentImplAccess().getComponentImplementationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentImplAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentImplRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentImplAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentImplRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getComponentImplAccess().getSuperTypeComponentTypeCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleComponentType
entryRuleComponentType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentTypeRule()); }
	iv_ruleComponentType=ruleComponentType
	{ $current=$iv_ruleComponentType.current; }
	EOF;

// Rule ComponentType
ruleComponentType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component type'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentTypeAccess().getComponentTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentTypeAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentTypeAccess().getCompFeaturesComponentFeatureParserRuleCall_3_0());
				}
				lv_compFeatures_3_0=ruleComponentFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentTypeRule());
					}
					add(
						$current,
						"compFeatures",
						lv_compFeatures_3_0,
						"hu.bme.mit.ComponentModel.ComponentFeature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComponentFeature
entryRuleComponentFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentFeatureRule()); }
	iv_ruleComponentFeature=ruleComponentFeature
	{ $current=$iv_ruleComponentFeature.current; }
	EOF;

// Rule ComponentFeature
ruleComponentFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getComponentFeatureAccess().getPortsPortParserRuleCall_0());
			}
			lv_ports_0_0=rulePort
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getComponentFeatureRule());
				}
				add(
					$current,
					"ports",
					lv_ports_0_0,
					"hu.bme.mit.ComponentModel.Port");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPortAccess().getInPortParserRuleCall_0());
		}
		this_InPort_0=ruleInPort
		{
			$current = $this_InPort_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPortAccess().getOutPortParserRuleCall_1());
		}
		this_OutPort_1=ruleOutPort
		{
			$current = $this_OutPort_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInPort
entryRuleInPort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInPortRule()); }
	iv_ruleInPort=ruleInPort
	{ $current=$iv_ruleInPort.current; }
	EOF;

// Rule InPort
ruleInPort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port instance in'
		{
			newLeafNode(otherlv_0, grammarAccess.getInPortAccess().getPortInstanceInKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInPortAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPortRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInPortAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInPortRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getInPortAccess().getSuperTypePortTypeCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleOutPort
entryRuleOutPort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutPortRule()); }
	iv_ruleOutPort=ruleOutPort
	{ $current=$iv_ruleOutPort.current; }
	EOF;

// Rule OutPort
ruleOutPort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port instance out'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutPortAccess().getPortInstanceOutKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutPortAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutPortRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOutPortAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutPortRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getOutPortAccess().getSuperTypePortTypeCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRulePortType
entryRulePortType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortTypeRule()); }
	iv_rulePortType=rulePortType
	{ $current=$iv_rulePortType.current; }
	EOF;

// Rule PortType
rulePortType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port type'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortTypeAccess().getPortTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortTypeAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPortTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortTypeAccess().getEModesErrorModesParserRuleCall_3_0());
				}
				lv_eModes_3_0=ruleerrorModes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortTypeRule());
					}
					set(
						$current,
						"eModes",
						lv_eModes_3_0,
						"hu.bme.mit.ComponentModel.errorModes");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPortTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleerrorModes
entryRuleerrorModes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorModesRule()); }
	iv_ruleerrorModes=ruleerrorModes
	{ $current=$iv_ruleerrorModes.current; }
	EOF;

// Rule errorModes
ruleerrorModes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error mode'
		{
			newLeafNode(otherlv_0, grammarAccess.getErrorModesAccess().getErrorModeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getErrorModesAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getErrorModesRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ComponentModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
