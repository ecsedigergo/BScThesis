/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mit.componentModel.impl;

import hu.bme.mit.componentModel.CompConnDec;
import hu.bme.mit.componentModel.ComponentImpl;
import hu.bme.mit.componentModel.ComponentModelPackage;
import hu.bme.mit.componentModel.Port;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comp Conn Dec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.componentModel.impl.CompConnDecImpl#getSourceComp <em>Source Comp</em>}</li>
 *   <li>{@link hu.bme.mit.componentModel.impl.CompConnDecImpl#getSourcePort <em>Source Port</em>}</li>
 *   <li>{@link hu.bme.mit.componentModel.impl.CompConnDecImpl#getTargetComp <em>Target Comp</em>}</li>
 *   <li>{@link hu.bme.mit.componentModel.impl.CompConnDecImpl#getTargetPort <em>Target Port</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompConnDecImpl extends AbstractFeaturesImpl implements CompConnDec
{
  /**
   * The cached value of the '{@link #getSourceComp() <em>Source Comp</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceComp()
   * @generated
   * @ordered
   */
  protected ComponentImpl sourceComp;

  /**
   * The cached value of the '{@link #getSourcePort() <em>Source Port</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourcePort()
   * @generated
   * @ordered
   */
  protected Port sourcePort;

  /**
   * The cached value of the '{@link #getTargetComp() <em>Target Comp</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetComp()
   * @generated
   * @ordered
   */
  protected ComponentImpl targetComp;

  /**
   * The cached value of the '{@link #getTargetPort() <em>Target Port</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetPort()
   * @generated
   * @ordered
   */
  protected Port targetPort;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompConnDecImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ComponentModelPackage.Literals.COMP_CONN_DEC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl getSourceComp()
  {
    if (sourceComp != null && sourceComp.eIsProxy())
    {
      InternalEObject oldSourceComp = (InternalEObject)sourceComp;
      sourceComp = (ComponentImpl)eResolveProxy(oldSourceComp);
      if (sourceComp != oldSourceComp)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComponentModelPackage.COMP_CONN_DEC__SOURCE_COMP, oldSourceComp, sourceComp));
      }
    }
    return sourceComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl basicGetSourceComp()
  {
    return sourceComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSourceComp(ComponentImpl newSourceComp)
  {
    ComponentImpl oldSourceComp = sourceComp;
    sourceComp = newSourceComp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentModelPackage.COMP_CONN_DEC__SOURCE_COMP, oldSourceComp, sourceComp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Port getSourcePort()
  {
    if (sourcePort != null && sourcePort.eIsProxy())
    {
      InternalEObject oldSourcePort = (InternalEObject)sourcePort;
      sourcePort = (Port)eResolveProxy(oldSourcePort);
      if (sourcePort != oldSourcePort)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComponentModelPackage.COMP_CONN_DEC__SOURCE_PORT, oldSourcePort, sourcePort));
      }
    }
    return sourcePort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Port basicGetSourcePort()
  {
    return sourcePort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSourcePort(Port newSourcePort)
  {
    Port oldSourcePort = sourcePort;
    sourcePort = newSourcePort;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentModelPackage.COMP_CONN_DEC__SOURCE_PORT, oldSourcePort, sourcePort));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl getTargetComp()
  {
    if (targetComp != null && targetComp.eIsProxy())
    {
      InternalEObject oldTargetComp = (InternalEObject)targetComp;
      targetComp = (ComponentImpl)eResolveProxy(oldTargetComp);
      if (targetComp != oldTargetComp)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComponentModelPackage.COMP_CONN_DEC__TARGET_COMP, oldTargetComp, targetComp));
      }
    }
    return targetComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentImpl basicGetTargetComp()
  {
    return targetComp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTargetComp(ComponentImpl newTargetComp)
  {
    ComponentImpl oldTargetComp = targetComp;
    targetComp = newTargetComp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentModelPackage.COMP_CONN_DEC__TARGET_COMP, oldTargetComp, targetComp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Port getTargetPort()
  {
    if (targetPort != null && targetPort.eIsProxy())
    {
      InternalEObject oldTargetPort = (InternalEObject)targetPort;
      targetPort = (Port)eResolveProxy(oldTargetPort);
      if (targetPort != oldTargetPort)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComponentModelPackage.COMP_CONN_DEC__TARGET_PORT, oldTargetPort, targetPort));
      }
    }
    return targetPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Port basicGetTargetPort()
  {
    return targetPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTargetPort(Port newTargetPort)
  {
    Port oldTargetPort = targetPort;
    targetPort = newTargetPort;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentModelPackage.COMP_CONN_DEC__TARGET_PORT, oldTargetPort, targetPort));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_COMP:
        if (resolve) return getSourceComp();
        return basicGetSourceComp();
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_PORT:
        if (resolve) return getSourcePort();
        return basicGetSourcePort();
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_COMP:
        if (resolve) return getTargetComp();
        return basicGetTargetComp();
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_PORT:
        if (resolve) return getTargetPort();
        return basicGetTargetPort();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_COMP:
        setSourceComp((ComponentImpl)newValue);
        return;
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_PORT:
        setSourcePort((Port)newValue);
        return;
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_COMP:
        setTargetComp((ComponentImpl)newValue);
        return;
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_PORT:
        setTargetPort((Port)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_COMP:
        setSourceComp((ComponentImpl)null);
        return;
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_PORT:
        setSourcePort((Port)null);
        return;
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_COMP:
        setTargetComp((ComponentImpl)null);
        return;
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_PORT:
        setTargetPort((Port)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_COMP:
        return sourceComp != null;
      case ComponentModelPackage.COMP_CONN_DEC__SOURCE_PORT:
        return sourcePort != null;
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_COMP:
        return targetComp != null;
      case ComponentModelPackage.COMP_CONN_DEC__TARGET_PORT:
        return targetPort != null;
    }
    return super.eIsSet(featureID);
  }

} //CompConnDecImpl
