/*
 * generated by Xtext 2.9.2
 */
grammar InternalErrorModel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package hu.bme.mit.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.services.ErrorModelGrammarAccess;

}

@parser::members {

 	private ErrorModelGrammarAccess grammarAccess;

    public InternalErrorModelParser(TokenStream input, ErrorModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ErrorModel";
   	}

   	@Override
   	protected ErrorModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleErrorModel
entryRuleErrorModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorModelRule()); }
	iv_ruleErrorModel=ruleErrorModel
	{ $current=$iv_ruleErrorModel.current; }
	EOF;

// Rule ErrorModel
ruleErrorModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getErrorModelAccess().getAbstractElementErrorParserRuleCall_0());
			}
			lv_AbstractElement_0_0=ruleError
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getErrorModelRule());
				}
				add(
					$current,
					"AbstractElement",
					lv_AbstractElement_0_0,
					"hu.bme.mit.ErrorModel.Error");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleError
entryRuleError returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorRule()); }
	iv_ruleError=ruleError
	{ $current=$iv_ruleError.current; }
	EOF;

// Rule Error
ruleError returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getErrorAccess().getEModelDecParserRuleCall_0());
		}
		this_EModelDec_0=ruleEModelDec
		{
			$current = $this_EModelDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getErrorAccess().getEPropagationDecParserRuleCall_1());
		}
		this_EPropagationDec_1=ruleEPropagationDec
		{
			$current = $this_EPropagationDec_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEPropagationDec
entryRuleEPropagationDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEPropagationDecRule()); }
	iv_ruleEPropagationDec=ruleEPropagationDec
	{ $current=$iv_ruleEPropagationDec.current; }
	EOF;

// Rule EPropagationDec
ruleEPropagationDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error propagation'
		{
			newLeafNode(otherlv_0, grammarAccess.getEPropagationDecAccess().getErrorPropagationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEPropagationDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEPropagationDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ErrorModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getEPropagationDecAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEPropagationDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getEPropagationDecAccess().getSourceModelEModelDecCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getEPropagationDecAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEPropagationDecRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getEPropagationDecAccess().getSourcePropOutPropDecCrossReference_5_0());
				}
			)
		)
		otherlv_6='to'
		{
			newLeafNode(otherlv_6, grammarAccess.getEPropagationDecAccess().getToKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEPropagationDecRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getEPropagationDecAccess().getTargetModelEModelDecCrossReference_7_0());
				}
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getEPropagationDecAccess().getFullStopKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEPropagationDecRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getEPropagationDecAccess().getTargetPropInPropDecCrossReference_9_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEModelDec
entryRuleEModelDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEModelDecRule()); }
	iv_ruleEModelDec=ruleEModelDec
	{ $current=$iv_ruleEModelDec.current; }
	EOF;

// Rule EModelDec
ruleEModelDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error model'
		{
			newLeafNode(otherlv_0, grammarAccess.getEModelDecAccess().getErrorModelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEModelDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEModelDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ErrorModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEModelDecAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEModelDecAccess().getEmodelElementsEModelElementParserRuleCall_3_0());
				}
				lv_emodelElements_3_0=ruleEModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEModelDecRule());
					}
					add(
						$current,
						"emodelElements",
						lv_emodelElements_3_0,
						"hu.bme.mit.ErrorModel.EModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEModelDecAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEModelElement
entryRuleEModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEModelElementRule()); }
	iv_ruleEModelElement=ruleEModelElement
	{ $current=$iv_ruleEModelElement.current; }
	EOF;

// Rule EModelElement
ruleEModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEModelElementAccess().getStateDecParserRuleCall_0());
		}
		this_StateDec_0=ruleStateDec
		{
			$current = $this_StateDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEModelElementAccess().getEventDecParserRuleCall_1());
		}
		this_EventDec_1=ruleEventDec
		{
			$current = $this_EventDec_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEModelElementAccess().getOuterPropagationParserRuleCall_2());
		}
		this_OuterPropagation_2=ruleOuterPropagation
		{
			$current = $this_OuterPropagation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOuterPropagation
entryRuleOuterPropagation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOuterPropagationRule()); }
	iv_ruleOuterPropagation=ruleOuterPropagation
	{ $current=$iv_ruleOuterPropagation.current; }
	EOF;

// Rule OuterPropagation
ruleOuterPropagation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOuterPropagationAccess().getInPropDecParserRuleCall_0());
		}
		this_InPropDec_0=ruleInPropDec
		{
			$current = $this_InPropDec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOuterPropagationAccess().getOutPropDecParserRuleCall_1());
		}
		this_OutPropDec_1=ruleOutPropDec
		{
			$current = $this_OutPropDec_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInPropDec
entryRuleInPropDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInPropDecRule()); }
	iv_ruleInPropDec=ruleInPropDec
	{ $current=$iv_ruleInPropDec.current; }
	EOF;

// Rule InPropDec
ruleInPropDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='propagation in'
		{
			newLeafNode(otherlv_0, grammarAccess.getInPropDecAccess().getPropagationInKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInPropDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPropDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ErrorModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getInPropDecAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInPropDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getInPropDecAccess().getAffectedStateEventDecCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleOutPropDec
entryRuleOutPropDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutPropDecRule()); }
	iv_ruleOutPropDec=ruleOutPropDec
	{ $current=$iv_ruleOutPropDec.current; }
	EOF;

// Rule OutPropDec
ruleOutPropDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='propagation out'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutPropDecAccess().getPropagationOutKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutPropDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutPropDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ErrorModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='<-'
		{
			newLeafNode(otherlv_2, grammarAccess.getOutPropDecAccess().getLessThanSignHyphenMinusKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutPropDecRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getOutPropDecAccess().getFromStateEventDecCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStateDec
entryRuleStateDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateDecRule()); }
	iv_ruleStateDec=ruleStateDec
	{ $current=$iv_ruleStateDec.current; }
	EOF;

// Rule StateDec
ruleStateDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error state'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateDecAccess().getErrorStateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ErrorModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEventDec
entryRuleEventDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventDecRule()); }
	iv_ruleEventDec=ruleEventDec
	{ $current=$iv_ruleEventDec.current; }
	EOF;

// Rule EventDec
ruleEventDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='error event'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventDecAccess().getErrorEventKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventDecAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventDecRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"hu.bme.mit.ErrorModel.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEventDecAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventDecAccess().getEventFeaturesEventFeatureParserRuleCall_3_0());
				}
				lv_eventFeatures_3_0=ruleEventFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventDecRule());
					}
					add(
						$current,
						"eventFeatures",
						lv_eventFeatures_3_0,
						"hu.bme.mit.ErrorModel.EventFeature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEventDecAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEventFeature
entryRuleEventFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventFeatureRule()); }
	iv_ruleEventFeature=ruleEventFeature
	{ $current=$iv_ruleEventFeature.current; }
	EOF;

// Rule EventFeature
ruleEventFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEventFeatureAccess().getEventStateParserRuleCall());
	}
	this_EventState_0=ruleEventState
	{
		$current = $this_EventState_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEventState
entryRuleEventState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventStateRule()); }
	iv_ruleEventState=ruleEventState
	{ $current=$iv_ruleEventState.current; }
	EOF;

// Rule EventState
ruleEventState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='states'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventStateAccess().getStatesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEventStateAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEventStateAccess().getSourceStateStateDecCrossReference_2_0());
				}
			)
		)
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getEventStateAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventStateRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getEventStateAccess().getTargetStateStateDecCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDOUBLERule()); }
	iv_ruleDOUBLE=ruleDOUBLE
	{ $current=$iv_ruleDOUBLE.current.getText(); }
	EOF;

// Rule DOUBLE
ruleDOUBLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOUBLEAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
